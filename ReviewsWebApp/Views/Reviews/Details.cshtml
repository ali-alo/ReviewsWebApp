@using System.Security.Claims;
@using ReviewsWebApp.Areas.Identity;
@model ReviewDetailsViewModel

@{
    string? userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    bool CanEditReview() =>
        Model.ReviewDetails.CreatorId is not null && Model.ReviewDetails.CreatorId == userId
        || User.IsInRole(ApplicationRoleTypes.Admin);
}

<partial name="_ReviewItemSummary" model="new ReviewItemSummaryViewModel(Model.ContainerLink, Model.ReviewsAverage, Model.ReviewsCount, Model.ReviewItem)" />
<hr />
<h3>About the review</h3>

<div class="review-frame p-3 mt-3">
    <div class="review-title fs-3 fw-bold mb-2 d-flex">
        <span>@Model.ReviewDetails.Title</span>
        <div class="ms-auto d-flex flex-column">
            <span>
                @if (CanEditReview())
                {
                    <a asp-action="Edit" asp-controller="Reviews" asp-route-id="@Model.ReviewDetails.Id" class="me-3 rotate-15 d-inline-block"><i class="bi bi-pencil text-danger fs-3"></i></a>
                }
                @if (Model.ReviewDetails.UsersIdWhoLiked.Contains(userId))
                {
                    <a class="text-dark text-decoration-none hover-increase d-inline-block" href="@Url.Action("DislikeReview", "User", new { id = Model.ReviewDetails.Id, returnUrl = $"/Reviews/Details/{Model.ReviewDetails.Id}" })" title="Remove Like">
                        <i class="bi bi-heart-fill text-danger"></i>
                    </a>
                }
                else
                {
                    <a class="text-dark text-decoration-none hover-increase d-inline-block" href="@Url.Action("LikeReview", "User", new { id = Model.ReviewDetails.Id, returnUrl = $"/Reviews/Details/{Model.ReviewDetails.Id}" })" title="Like">
                        <i class="bi bi-heart-fill"></i>
                    </a>
                }
                <span class="ms-2">@Model.ReviewDetails.UsersIdWhoLiked.Count()</span>
            </span>
        </div>
    </div>
    <div class="ratings mb-2">
        <span class="extra-info"><i class="bi bi-info-circle" data-bs-toggle="tooltip" data-bs-placement="right" title="@Model.ReviewDetails.CreatorFirstName @Model.ReviewDetails.CreatorLastName put @((int)Model.ReviewDetails.Grade) stars for this item"></i></span>
        @for (int i = 10; i >= 1; i--)
        {
            <span for="@i" @(Model.ReviewDetails.Grade >= i ? "class=text-orange" : "")>&#9733</span>
        }
    </div>
    <div class="review-content markdown mb-2">@Model.ReviewDetails.MarkdownText</div>
    <div class="w-100 d-flex justify-content-start flex-wrap position-relative my-3 img-container">
        @foreach (var image in Model.ReviewDetails.Images)
        {
            <div class="image overflow-hidden position-relative">
                <img src="@Model.ContainerLink@image.ImageGuid" alt="Imate Image Uploaded By The User" class="w-100 h-100 img-clickable">
            </div>
        }
    </div>
    <div class="review-author fst-italic">- 
        <a asp-action="Details" asp-controller="User" asp-route-id="@Model.ReviewDetails.CreatorId"> @Model.ReviewDetails.CreatorFirstName @Model.ReviewDetails.CreatorLastName</a> 
        <partial name="_ComputedCreatedTime" model="Model.ReviewDetails.CreatedTime" />
        </div>
    @if (Model.ReviewDetails.ReviewRatings.Any())
    {
        <div class="ratings mb-2 justify-content-start align-items-center">
            @{
                double averageReviewRating = Math.Round(Model.ReviewDetails.ReviewRatings.Average(r => r.Rating), 2);
                <span class="extra-info"><i class="bi bi-info-circle" data-bs-toggle="tooltip" data-bs-placement="top" title="@Model.ReviewDetails.ReviewRatings.Count() users rated this review. Average rating is @averageReviewRating stars"></i></span>
                <span class="extra-info">@averageReviewRating</span>
                for (int i = 5; i >= 1; i--)
                {
                    <span for="@i" @(averageReviewRating >= i ? "class=text-orange" : "")>&#9733</span>
                }
            }
        </div>
    }
    else
    {
        <div class="text-end">
            <span>Review doesn't contain ratings at the moment. Be the first who rates it!</span>
         </div>
    }
</div>
<hr />
<partial name="_CommentForm" model="Model.CommentForm"/>
<hr />
<div class="comments-section mt-3">
    @if (@Model.Comments.Count() == 0)
    {
            <h3>No comments yet</h3>
    }
    else
    {
        
        <h3>Other comments (@Model.Comments.Count())</h3>
        @foreach (var comment in Model.Comments)
        {
            <div class="comment mt-3 p-3">
                <div class="comment-content">
                    @comment.Content
                </div>
                <div class="comment-author mt-1">
                    <a asp-action="Details" asp-controller="User" asp-route-id="@comment.UserId">- @comment.User.FirstName @comment.User.LastName</a>
                    <partial name="_ComputedCreatedTime" model="comment.CreatedAt" />
                </div>
            </div>
        }
    }
</div>