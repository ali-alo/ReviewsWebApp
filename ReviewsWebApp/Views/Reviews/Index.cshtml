@using System.Security.Claims;
@using ReviewsWebApp.Areas.Identity;
@inject IViewLocalizer _localizer;
@model ReviewsIndexViewModel

@{
    ViewData["Title"] = _localizer["Title"];

    bool CanEditReview(ReviewDto review) => 
        review.CreatorId is not null && review.CreatorId == @User.FindFirstValue(ClaimTypes.NameIdentifier) 
        || User.IsInRole(ApplicationRoleTypes.Admin);
}

<h1>@_localizer["Header"]</h1>

<div class="row">
    @foreach(var review in Model.Reviews)
    {
        <div class="col-3 mt-4">
            <div class="card">
                <img src="@(Model.ContainerLink +  (review.Images.Any() ? review.Images[0].ImageGuid : review.ReviewItemImageGuid))" class="img-clickable card-img-top h-200p" alt="Review image" />
                <div class="card-body">
                    <h5 class="card-header">@review.ReviewItemTitle</h5>
                    <h5 class="card-title mt-2">@review.Title</h5>
                    <div class="card-text markdown mt-3">@review.MarkdownText</div>
                    <p class="text-end">@(review.CreatorFirstName == null ? "Deleted Account" : $"{review.CreatorFirstName} {review.CreatorLastName}")</p>
                    <a asp-action="Create" asp-controller="Reviews" asp-route-id="@review.Id" class="btn btn-secondary">Rate review</a>
                    @if (CanEditReview(review))
                    {
                        <a asp-action="Edit" asp-controller="Reviews" asp-route-id="@review.Id" class="btn btn-warning">Edit</a>
                    }
                </div>
            </div>
        </div>
    }
</div>